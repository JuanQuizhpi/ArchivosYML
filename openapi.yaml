openapi: 3.0.0
info:
  title: UniversidadServices API
  version: 1.0.0
  description: API para la gesti√≥n de Universidades
servers:
  - url: http://localhost:8080/demo64DockC/rs
    description: Local Server

paths:
  /universidades:
    post:
      summary: Crear un nuevo universidad
      operationId: guardarUniversidad
      requestBody:
        description: Datos de la universidad a crear
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Universidad'
      responses:
        '201':
          description: Universidad creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      summary: Actualizar un universidad existente
      operationId: actualizarUniversidad
      requestBody:
        description: Datos de la Universidad a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Universidad'
      responses:
        '200':
          description: Universidad actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Universidad'
        '404':
          description: Universidad no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      summary: Eliminar una universidad
      operationId: eliminarUniversidad
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
          description: Id del Universidad a eliminar
      responses:
        '200':
          description: Universidad eliminado exitosamente
          content:
            application/json:
              schema:
                type: string
                example: "Universidad Eliminado"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

    get:
      summary: Obtener universidad por id
      operationId: getUniversidadPorID
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: id de universidad a obtener
      responses:
        '200':
          description: universidad encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Universidad'
        '404':
          description: universidad no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /universidades/list:
    get:
      summary: Obtener la lista de universidades
      operationId: getUniversidades
      responses:
        '200':
          description: Lista de universidades
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Universidad'
        '404':
          description: No se registran universidades
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

components:
  schemas:
    Carro:
      type: object
      properties:
        id:
          type: string
        nombre:
          type: string
        sede:
          type: string
    ErrorMessage:
      type: object
      properties:
        codigo:
          type: integer
          example: 1
        mensaje:
          type: string
          example: ok